@page "/{culture}/RejectedResults"
@using Microsoft.AspNetCore.WebUtilities;
@using WEUPanel.Helpers.Pagination
@inject IRejectedResultService _rejectedResultService
@inject NavigationManager _navigation
@inject NotificationService _notice
@inject BaseRequestParameter _baseRequestParameter
@inject IMessageService _message
@inject ConfirmService _confirmService
@inject IStringLocalizer<Resource> _localizer
@using WEUPanel.Shared.Common
@inject State state

@if (dataTable != null && dataTable?.Count() != 0)
{
    <div class="col-md-12">
        <Table Bordered
           Responsive="true"
           Loading="_loading"
           TItem="RejectedResultModels.RejectedResult"
           DataSource="@dataTable"
           HidePagination=@true
           Total="@_total">
            <PropertyColumn Title="@_localizer["شناسه"]" Property="c=>c.Id">
                <a>@context.Id</a>
            </PropertyColumn>
            <PropertyColumn Title="@_localizer["نام"]" Property="c=>c.Name">
                <a>@context.Name</a>
            </PropertyColumn>
            <ActionColumn Title="@_localizer["عملیات"]">
                <Space Size=@("middle")>

                    <Button Class="bg-info small m-1" OnClick="()=>Detail(context.Id,true)">@_localizer["مشاهده"]</Button>

                </Space>
            </ActionColumn>
        </Table>



        <br />
        <div class="d-flex justify-content-between">
            <p>@_localizer["شماره صفحه"]: @_pageIndex | @_localizer["تعداد در هر صفحه"]: @_pageSize | @_localizer["کل اطلاعات"]: @_total</p>
            <div class="prev-next-box">
                <CustomePaging pageNumber=@_pageIndex
                           pageSize=@_pageSize
                           totalPages=@results.TotalPages
                           totalRecords=@results.TotalRecords
                           nextPage=@results.NextPage
                           previousPage=@results.PreviousPage
                           Spread="2"
                           SelectedPage="@SelectedPage" />

            </div>
        </div>

        <br />
    </div>

}
else
{
    <Alert Message="@_localizer["دیتایی وجود ندارد!"]" Type="@AlertType.Info" />
}



@code {
    [Parameter]
    public string culture { get; set; }
    [Parameter]
    [SupplyParameterFromQuery]
    public string page { get; set; }
    ITable tableRef;
    PagedResponse<IEnumerable<RejectedResultModels.RejectedResult>> results;
    IEnumerable<RejectedResultModels.RejectedResult> dataTable;
    int _pageIndex = new();
    int _pageSize = new();
    int _total = new();
    bool _loading = false;
    protected override async Task OnInitializedAsync()
    {
        var uri = _navigation.ToAbsoluteUri(_navigation.Uri);
        var querystrings = QueryHelpers.ParseQuery(uri.Query);
        if (querystrings.TryGetValue("page", out var page))
        {
            _pageIndex = Convert.ToInt32(page);
        };
        _loading = true;
        results = await _rejectedResultService.GetAllByPaging(_pageIndex, 10);
        _loading = false;

        dataTable = results.Data;
        _pageIndex = results.PageNumber;
        _pageSize = results.PageSize;
        _total = results.TotalRecords;
        state.SetPage(_pageIndex.ToString());
    }
    private async Task nextPage()
    {
        _loading = true;
        results = await _rejectedResultService.GetAllByPaging((_pageIndex + 1), _pageSize);
        _loading = false;
        dataTable = results.Data;
        _pageIndex = results.PageNumber;
        _pageSize = results.PageSize;
        _total = results.TotalRecords;
        ChangeUrl();

    }
    private async Task prevPage()
    {
        _loading = true;
        results = await _rejectedResultService.GetAllByPaging((_pageIndex - 1), _pageSize);
        _loading = false;
        dataTable = results.Data;
        _pageIndex = results.PageNumber;
        _pageSize = results.PageSize;
        _total = results.TotalRecords;
        ChangeUrl();
    }
    private async Task SelectedPage(int page)
    {
        _loading = true;

        results = await _rejectedResultService.GetAllByPaging(page, _pageSize);
        _loading = false;
        dataTable = results.Data;
        _pageIndex = results.PageNumber;
        _pageSize = results.PageSize;
        _total = results.TotalRecords;
        ChangeUrl();
    }

    void Detail(int id, bool value)
    {
        _navigation.NavigateTo(culture + "/RejectedResultDetail/" + id);
    }
    private void ChangeUrl()
    {
        string url = UriHelper.RemoveQueryStringByKey(_navigation.Uri, "page");
        var query = new Dictionary<string, string> { { "page", _pageIndex.ToString() } };
        _navigation.NavigateTo(QueryHelpers.AddQueryString(url, query));
    }
}